services:

  api:
    image: ghcr.io/crimeisdown/trunk-transcribe:${VERSION:-main}
    build:
      context: .
      dockerfile: docker/Dockerfile
      cache_from:
        - ghcr.io/crimeisdown/trunk-transcribe:main
    ports:
      - ${API_PORT:-8000}:8000
    command: api
    volumes:
      - ./app:/src/app
      - ./config:/src/config
      - ./tests:/src/tests
      - ./docker/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
      - ./docker/healthcheck.sh:/usr/local/bin/healthcheck.sh
    env_file: .env
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/healthz"]
      retries: 3
      timeout: 5s
    labels:
      - autoheal=true

  flower:
    image: ghcr.io/crimeisdown/trunk-transcribe:${VERSION:-main}
    command: flower
    volumes:
      - ./docker/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
      - flower-data:/src/data
    ports:
      - ${FLOWER_PORT:-5555}:5555
    environment:
      - CELERY_BROKER_URL
      - CELERY_RESULT_BACKEND
      - CELERY_QUEUES=transcribe,transcribe_gpu
      - FLOWER_PURGE_OFFLINE_WORKERS=120
      - FLOWER_PERSISTENT=1
      - FLOWER_DB=/src/data/flower
      - FLOWER_STATE_SAVE_INTERVAL=30000
      - FLOWER_BROKER_API
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    hostname: "rabbitmq"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - ./docker/rabbitmq-timeout.conf:/etc/rabbitmq/conf.d/30-timeout.conf
    ports:
      - ${RABBITMQ_PORT:-5672}:5672
      - ${RABBITMQ_MGMT_PORT:-15672}:15672
    environment:
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
    restart: always

  meilisearch:
    image: 'getmeili/meilisearch:${MEILI_VERSION:-latest}'
    ports:
      - ${MEILI_PORT:-7700}:7700
    environment:
      - MEILI_MASTER_KEY
    volumes:
      - meilisearch-data:/meili_data
    healthcheck:
      test: ["CMD", "curl", "-f",  "http://localhost:7700/health"]
      retries: 3
      timeout: 5s
    restart: always
    labels:
      - autoheal=true

  postgres:
    image: postgres:${POSTGRES_VERSION:-latest}
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: always

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - ${FRONTEND_PORT:-3000}:3000
    environment:
      - MEILI_URL
      - MEILI_MASTER_KEY
      - MEILI_INDEX

volumes:
  flower-data:
  rabbitmq-data:
  meilisearch-data:
  postgres-data:
