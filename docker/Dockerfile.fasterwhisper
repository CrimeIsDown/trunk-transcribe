#
# NOTE: THIS DOCKERFILE IS GENERATED VIA "generate-dockerfiles.sh"
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#
ARG CUDA_VERSION=12.1.0
FROM nvidia/cuda:${CUDA_VERSION}-cudnn8-runtime-ubuntu22.04

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get -y upgrade && \
    apt-get install -y --no-install-recommends \
    curl \
    software-properties-common \
    git \
    gpg-agent \
    ffmpeg \
    sox \
    && \
    rm -rf /var/lib/apt/lists/*

RUN add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    python3.12 \
    python3.12-dev \
    python3.12-venv \
    python3.12-distutils \
    && \
    rm -rf /var/lib/apt/lists/*

RUN curl -sSL https://install.python-poetry.org | python3.12 -

ENV PATH="/root/.local/bin:${PATH}"

WORKDIR /src
COPY pyproject.toml poetry.lock ./
RUN poetry env use python3.12 && \
    poetry install --without dev --no-root --no-interaction --no-ansi

# Install Faster Whisper
COPY docker/install-whisper.sh /usr/local/bin/install-whisper.sh
RUN install-whisper.sh git+https://github.com/SYSTRAN/faster-whisper.git@v1.0.2

ARG WHISPER_MODEL=base.en
ENV WHISPER_MODEL=${WHISPER_MODEL}
# Pre-download the Whisper model
RUN poetry run python3 -c "import os; from faster_whisper.utils import download_model; download_model(os.getenv('WHISPER_MODEL'))"
ENV WHISPER_IMPLEMENTATION=faster-whisper

COPY app app
COPY config config
COPY docker/docker-entrypoint.sh /usr/local/bin/

ENV PYTHONPATH=/src

ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["worker"]

ARG GIT_COMMIT
ENV GIT_COMMIT=${GIT_COMMIT}
